#!/bin/bash

source ./lib/colorful

usage() {
	blueecho "USAGE 1:"
	blueecho "./remove_extension <name of env file> <name of extension>"
	blueecho "./remove_extension Bolivia-Cochabamba otp"
	blueecho "USAGE 2 (works only when \$enfile has been set e.g. by 'export $enfile=[...]' or by invoking '. ./workas'):"
	blueecho "./remove_extension <name of extension>"
	blueecho "./remove_extension otp"
}

envname=""
extname=""
nginxcityconf_template_interweb="./nginx/app.dev.conf"
nginxcityconf_template_intraweb="./nginx/app.intraweb.conf"

MODE_VIRTUALDOMAINS="virtual domains"
MODE_VIRTUALDOMAINS_INDICATOR="./data/nginx/interweb/virtualdomains.conf"

blueecho "1. perform some checks & normalizations ..."
source ./lib/validation

extname="${args[0]}"
extDir="./extensions/$extname"
## if $extname is empty or $extDir does not exist
if [ -z $extname ] || ! [ -d "$extDir" ]; then
	redecho "  Error: You must specify a valid name of an extension to add to city '$city'">&2
	echo "  A list of extensions available:"
	dir ./extensions
	exit 1
fi

if [ $env = "production" ]; then
	nginxcityconf_template_interweb="./nginx/app.template.conf"
fi

blueecho "2. add the extension"

#dataDir="$extDir/data_$city"
#dataDirInactive="$dataDir.inactive"
ymlFile="$extDir/$city.yml"
ymlFileInactive="$ymlFile.inactive"

if ! [ -f "$ymlFileInactive" ] && ! [ -f "$ymlFile" ]; then
	orangeecho "   building & adding extension '$extname' ( directory '$extDir' ) for city '$city' ..."
	envsubst < $extDir/docker-compose.yml > "$ymlFile"
	if ! [ -f "$ymlFile" ]; then
		redecho "     Creating & adding operation failed! Do I have write access to '$extDir'?">&2
		exit 1
	fi
elif [ -f "$ymlFileInactive" ]; then
	orangeecho "   adding extension  '$extname' ( directory '$extDir' ) for city '$city' to city '$city' ..."
	mv "$ymlFileInactive" $ymlFile --verbose
	if ! [ -f "$ymlFile" ]; then
		redecho "     Adding failed! Do I have write access to '$ymlFileInactive'?">&2
		exit 1
	fi
else
	greenecho "   extension '$extname' for city '$city' already added. No need to do it again :)"
fi

blueecho "3. add interweb nginx configuration"
nginxcityconf="./data/nginx/interweb/$city.conf"
if [ -f "$MODE_VIRTUALDOMAINS_INDICATOR" ]; then
	greenecho "   no need to add nginx configuration in mode '$MODE_VIRTUALDOMAINS' :)"
else
	orangeecho "   adding nginx configuration for '$extname' in city '$city' ..."
	nginxcityfolder="./data/nginx/interweb/$city"
	nginxcityconf="$nginxcityfolder.conf"
	nginxcityextensionconf="$nginxcityfolder/$extname.conf"
	if ! [ -d "$nginxcityfolder" ]; then
		orangeecho "     creating nginx configuration for city '$city' ..."
		mkdir "$nginxcityfolder"
	fi
	if ! [ -f "$nginxcityconf" ]; then
		orangeecho "     completing nginx configuration for city '$city' ..."
		sed "s/# extensions/# real domain include location blocks for city '$city'\ninclude \/etc\/nginx\/interweb\/$city\/\*.conf\;/" "$nginxcityconf_template_interweb" | sed "s/example.org/$domain/" > "$nginxcityconf"
	fi
	
	if ! [ -f "$extDir/nginx.conf" ]; then
		redecho "     Error: there is no nginx configuration for extension '$extname' available!"
		exit 1
	fi
	orangeecho "     copying & altering nginx configuration for extension '$extname' to nginx city configuration for '$city' (overwriting if already existing) ..."
	sed -r "s/http\:\/\/(.+?)\//http\:\/\/\\1_$city\//" "$extDir/nginx.conf" > "$nginxcityextensionconf"
fi

if [ "$env" = "production" ]; then
	blueecho "4. add intraweb nginx configuration because we are in production"
	orangeecho "   adding nginx configuration for '$extname' in city '$city' ..."
	nginxcityfolder="./data/nginx/intraweb/$city"
	nginxcityconf="$nginxcityfolder.conf"
	nginxcityextensionconf="$nginxcityfolder/$extname.conf"
	extension_container_name="${extname}_${city}"
	if ! [ -d "$nginxcityfolder" ]; then
		orangeecho "     creating nginx configuration for city '$city' ..."
		mkdir "$nginxcityfolder"
	fi
	
	if ! [ -f "$nginxcityconf" ]; then
		orangeecho "     completing nginx configuration for city '$city' ..."
		echo "include $nginxcityfolder/*.conf" > "$nginxcityconf"
	fi
	
	if ! [ -f "$nginxcityextensionconf" ]; then
		orangeecho "     adding intraweb server for extension '$extname' in city '$city' ..."
		sed "s/localhost/$extension_container_name.localhost/" "$nginxcityconf_template_intraweb" | sed "s/\extname_city\/$extension_container_name/" > "$nginxcityextensionconf"
	fi
fi

greenecho "added trufi extension '$extname' to city '$city'"
echo -e "It is available somewhere under the following domains (as far as known to this script):"
echo -e "- Interweb: \033[0;34m$domain\033[0;m"
if [ "$env" = "production" ]; then
	echo -e "- Intraweb: \033[0;34m$extension_container_name.localhost\033[0;m"
fi
